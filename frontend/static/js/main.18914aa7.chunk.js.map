{"version":3,"sources":["api.ts","utils.ts","apiClient.ts","App.tsx","reportWebVitals.ts","index.tsx","App.module.scss"],"names":["SHORT_URLS_API_PATH","getUrlPrefix","urlObj","URL","window","location","href","protocol","host","url","onSuccess","onError","a","headers","Headers","append","fetch","method","body","JSON","stringify","then","checkStatus","response","parseJson","data","error","message","hash","catch","status","Error","statusText","json","AppStatus","App","useState","EnteringUrl","setStatus","shortUrl","setShortUrl","errorMessage","setErrorMessage","longUrl","setLongUrl","className","styles","app","widget","value","type","placeholder","onChange","e","target","required","onClick","createShortUrl","ShowingShortUrl","ShowingError","Pending","select","readOnly","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"mOAUaA,EAAsB,iBCR5B,SAASC,IACd,IAAMC,EAAS,IAAIC,IAAIC,OAAOC,SAASC,MACvC,MAAM,GAAN,OAAUJ,EAAOK,SAAjB,aAA8BL,EAAOM,MAArC,ODO2B,KCP3B,K,4CCGK,WACLC,EACAC,EACAC,GAHK,eAAAC,EAAA,6DAKCC,EAAU,IAAIC,SACZC,OAAO,eAAgB,oBAN1B,kBAQEC,MAAMhB,EAAqB,CAChCiB,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAEX,QACvBI,YAECQ,KAAKC,GACLD,MAAK,SAAAE,GAAQ,OAAIC,EAAsCD,MACvDF,MAAK,SAAAI,GACAA,EAAKC,MAAOf,EAAQc,EAAKE,SACxBjB,EAAU,GAAD,OAAIT,KAAJ,OAAqBwB,EAAKG,UAEzCC,OAAM,SAACH,GACNf,EAAQe,EAAMC,aApBb,4C,sBAwBP,SAASL,EAAYC,GACnB,GAAIA,EAASO,QAAU,KAAOP,EAASO,OAAS,IAAK,OAAOP,EAI5D,MAHc,IAAIQ,MAAJ,sBACGR,EAASO,OADZ,YACsBP,EAASS,aAK/C,SAASR,EAAaD,GACpB,OAAOA,EAASU,O,ICnCbC,E,iCAAAA,O,6BAAAA,I,qBAAAA,I,qCAAAA,I,gCAAAA,M,KAyEUC,MAlEf,WAAgB,IAAD,EACeC,mBAAoBF,EAAUG,aAD7C,mBACNP,EADM,KACEQ,EADF,OAEmBF,mBAAS,IAF5B,mBAENG,EAFM,KAEIC,EAFJ,OAG2BJ,mBAAS,IAHpC,mBAGNK,EAHM,KAGQC,EAHR,OAIiBN,mBAAS,IAJ1B,mBAINO,EAJM,KAIGC,EAJH,KAMb,OACE,qBAAKC,UAAWC,IAAOC,IAAvB,SACE,sBAAKF,UAAWC,IAAOE,OAAvB,UACGlB,IAAWI,EAAUG,aACpB,qCACE,qDACA,uBACEY,MAAON,EACPO,KAAK,MACLC,YAAY,yBACZC,SAAU,SAAAC,GAAC,OAAIT,EAAWS,EAAEC,OAAOL,QACnCM,UAAQ,IAEV,wBACEC,QAAS,WACFb,KD1Bd,SAAP,+BC2BgBc,CACEd,GACA,SAAAJ,GACEC,EAAYD,GACZD,EAAUJ,EAAUwB,oBAEtB,SAAAjB,GACEC,EAAgBD,GAChBH,EAAUJ,EAAUyB,iBAGxBrB,EAAUJ,EAAU0B,WAdxB,wBAoBH9B,IAAWI,EAAUwB,iBACpB,qCACE,8CACA,uBACET,MAAOV,EACPiB,QAAS,SAAAH,GAAC,OAAKA,EAAEC,OAA4BO,UAC7CC,UAAQ,IAEV,wBAAQN,QAAS,kBAAMlB,EAAUJ,EAAUG,cAA3C,gCAKHP,IAAWI,EAAU0B,SAAW,6CAChC9B,IAAWI,EAAUyB,cACpB,qCACE,qBAAKd,UAAWC,IAAOpB,MAAvB,SAA+Be,IAC/B,wBAAQe,QAAS,kBAAMlB,EAAUJ,EAAUG,cAA3C,gCCtDG0B,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqB5C,MAAK,YAAkD,IAA/C6C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K,kBCfAa,EAAOC,QAAU,CAAC,IAAM,iBAAiB,OAAS,oBAAoB,MAAQ,sB","file":"static/js/main.18914aa7.chunk.js","sourcesContent":["export interface CreateShortUrlRequestData {\n  url: string\n}\n\nexport interface CreateShortUrlResponseData {\n  error: boolean\n  hash: string\n  message: string\n}\n\nexport const SHORT_URLS_API_PATH = '/api/shorturls'\nexport const REDIRECT_PATH = '/s'\n","import { REDIRECT_PATH } from './api'\n\nexport function getUrlPrefix() {\n  const urlObj = new URL(window.location.href)\n  return `${urlObj.protocol}//${urlObj.host}${REDIRECT_PATH}/`\n}\n","import {\n  CreateShortUrlRequestData,\n  CreateShortUrlResponseData,\n  SHORT_URLS_API_PATH,\n} from './api'\nimport { getUrlPrefix } from './utils'\n\nexport async function createShortUrl(\n  url: string,\n  onSuccess: (shortUrl: string) => void,\n  onError: (message: string) => void\n) {\n  const headers = new Headers()\n  headers.append('content-type', 'application/json')\n\n  return fetch(SHORT_URLS_API_PATH, {\n    method: 'POST',\n    body: JSON.stringify({ url } as CreateShortUrlRequestData),\n    headers,\n  })\n    .then(checkStatus)\n    .then(response => parseJson<CreateShortUrlResponseData>(response))\n    .then(data => {\n      if (data.error) onError(data.message)\n      else onSuccess(`${getUrlPrefix()}${data.hash}`)\n    })\n    .catch((error: Error) => {\n      onError(error.message)\n    })\n}\n\nfunction checkStatus(response: Response) {\n  if (response.status >= 200 && response.status < 300) return response\n  const error = new Error(\n    `HTTP Error: ${response.status} ${response.statusText}`\n  )\n  throw error\n}\n\nfunction parseJson<T>(response: Response): Promise<T> {\n  return response.json()\n}\n","import { useState } from 'react'\nimport { createShortUrl } from './apiClient'\n\nimport styles from './App.module.scss'\n\nenum AppStatus {\n  EnteringUrl,\n  Pending,\n  ShowingShortUrl,\n  ShowingError,\n}\n\nfunction App() {\n  const [status, setStatus] = useState<AppStatus>(AppStatus.EnteringUrl)\n  const [shortUrl, setShortUrl] = useState('')\n  const [errorMessage, setErrorMessage] = useState('')\n  const [longUrl, setLongUrl] = useState('')\n\n  return (\n    <div className={styles.app}>\n      <div className={styles.widget}>\n        {status === AppStatus.EnteringUrl && (\n          <>\n            <label>Enter a long URL</label>\n            <input\n              value={longUrl}\n              type=\"url\"\n              placeholder=\"http://www.example.com\"\n              onChange={e => setLongUrl(e.target.value)}\n              required\n            />\n            <button\n              onClick={() => {\n                if (!longUrl) return\n                createShortUrl(\n                  longUrl,\n                  shortUrl => {\n                    setShortUrl(shortUrl)\n                    setStatus(AppStatus.ShowingShortUrl)\n                  },\n                  errorMessage => {\n                    setErrorMessage(errorMessage)\n                    setStatus(AppStatus.ShowingError)\n                  }\n                )\n                setStatus(AppStatus.Pending)\n              }}>\n              Shorten\n            </button>\n          </>\n        )}\n        {status === AppStatus.ShowingShortUrl && (\n          <>\n            <label>Short URL</label>\n            <input\n              value={shortUrl}\n              onClick={e => (e.target as HTMLInputElement).select()}\n              readOnly\n            />\n            <button onClick={() => setStatus(AppStatus.EnteringUrl)}>\n              Shorten another\n            </button>\n          </>\n        )}\n        {status === AppStatus.Pending && <div>Shortening</div>}\n        {status === AppStatus.ShowingError && (\n          <>\n            <div className={styles.error}>{errorMessage}</div>\n            <button onClick={() => setStatus(AppStatus.EnteringUrl)}>\n              Try again\n            </button>\n          </>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2ziFi\",\"widget\":\"App_widget__t52s3\",\"error\":\"App_error__1LS0k\"};"],"sourceRoot":""}